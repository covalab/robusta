"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[554],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6351:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={id:"tutorial",title:"Tutorial",sidebar_position:2},o=void 0,l={unversionedId:"tutorial",id:"tutorial",title:"Tutorial",description:"1. Your first Robusta Project",source:"@site/docs/tutorial.md",sourceDirName:".",slug:"/tutorial",permalink:"/docs/tutorial",draft:!1,editUrl:"https://github.com/covalab/robusta/edit/main/website/docs/tutorial.md",tags:[],version:"current",lastUpdatedBy:"Minh Vuong",lastUpdatedAt:1685548768,formattedLastUpdatedAt:"May 31, 2023",sidebarPosition:2,frontMatter:{id:"tutorial",title:"Tutorial",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Get Started",permalink:"/docs/intro"},next:{title:"Customize Extension",permalink:"/docs/customize-extension"}},s={},p=[{value:"1. Your first Robusta Project",id:"1-your-first-robusta-project",level:3},{value:"2. Runner",id:"2-runner",level:3},{value:"2.1 main.dart",id:"21-maindart",level:4},{value:"2.2 app.dart",id:"22-appdart",level:4},{value:"2.3 event.dart",id:"23-eventdart",level:4}],u={toc:p},d="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"1-your-first-robusta-project"},"1. Your first Robusta Project"),(0,a.kt)("p",null,"To create a completely new Flutter Project, simply run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"robusta new [project name]\n")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://github.com/qu0cquyen/robusta/assets/28641819/b36e54b9-602f-4b19-aa56-8a488692bf0e",alt:"hello_robusta"})),(0,a.kt)("p",null,"After running the above command we will end up with project structure below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"\u251c\u2500\u2500 lib\n\u2502 \u251c\u2500\u2500 presentation\n\u2502 \u2502 \u251c\u2500\u2500 screens\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 counter\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 provider.dart\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 screen.dart\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 custom_error\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 screen.dart\n\u2502 \u251c\u2500\u2500 robusta\n\u2502 \u2502 \u251c\u2500\u2500 app.dart\n\u2502 \u2502 \u251c\u2500\u2500 boot.dart\n\u2502 \u2502 \u251c\u2500\u2500 error_handle.dart\n\u2502 \u2502 \u251c\u2500\u2500 event.dart\n\u2502 \u251c\u2500\u2500 main.dart\n")),(0,a.kt)("h3",{id:"2-runner"},"2. Runner"),(0,a.kt)("h4",{id:"21-maindart"},"2.1 main.dart"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="main.dart"',title:'"main.dart"'},"Future<void> main() async {\n  final runner = Runner(\n    defineBoot: defineBoot,\n    extensions: [\n      ImplementingCallbackExtension(),\n      appExtension(),\n      eventExtension(),\n    ],\n  );\n\n  await runner.run();\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Runner"),": A wrap around class in which it's responsible for booting extensions and running our main application."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"defineBoot"),": Defines any functionalities needed to be run before running into main application."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"extensions"),": Takes in a list of extensions which give us the capability of expanding our app with 3rd library.")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Extension is an interface class which is in charge of loading any defined initialization.")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"There are 2 ways of adding extensions:"),(0,a.kt)("ol",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ol"},"Call directly ",(0,a.kt)("strong",{parentName:"li"},"Extension Constructor")),(0,a.kt)("li",{parentName:"ol"},"Use ",(0,a.kt)("strong",{parentName:"li"},"command line")," to generate built-in ",(0,a.kt)("strong",{parentName:"li"},"Extension")," - Refer to ",(0,a.kt)("strong",{parentName:"li"},"Robusta CLI")," and ",(0,a.kt)("strong",{parentName:"li"},"built-in extensions")))),(0,a.kt)("h4",{id:"22-appdart"},"2.2 app.dart"),(0,a.kt)("p",null,"In Robusta ecosystem, everything starts with ",(0,a.kt)("inlineCode",{parentName:"p"},"Extension"),". Therefore, unlike convention main app entry point - ",(0,a.kt)("inlineCode",{parentName:"p"},"runApp(MyApp())"),", our main app entry point will be ",(0,a.kt)("inlineCode",{parentName:"p"},"FlutterAppExtension appExtension()")," - which is default generated when we create a new Robusta Project."),(0,a.kt)("p",null,"Your flutter app can be either ",(0,a.kt)("inlineCode",{parentName:"p"},"MaterialApp")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"CupertinoApp")," by defining settings through given optional params in ",(0,a.kt)("inlineCode",{parentName:"p"},"FlutterAppExtension")),(0,a.kt)("p",null,"Screens/Pages will be declared inside ",(0,a.kt)("inlineCode",{parentName:"p"},"screenFactories")," through ",(0,a.kt)("inlineCode",{parentName:"p"},"RouterSettings")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Screens/Pages in Robusta are created with the help of ",(0,a.kt)("inlineCode",{parentName:"p"},"GoRouter"))),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If you want to specify which screen/page should be shown up first, you need to ",(0,a.kt)("strong",{parentName:"p"},"implement")," ",(0,a.kt)("inlineCode",{parentName:"p"},"InitialScreen"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="counter/screen.dart"',title:'"counter/screen.dart"'},"class CounterScreen extends Screen implements InitialScreen {\n  @override\n  Widget build(BuildContext context, GoRouterState state) {\n    return const _CounterScreenWidget();\n  }\n\n  @override\n  String get routeName => 'counter';\n\n  @override\n  String get routePath => '/counter';\n}\n")),(0,a.kt)("h4",{id:"23-eventdart"},"2.3 event.dart"),(0,a.kt)("p",null,"Since Robusta is designed based on ",(0,a.kt)("inlineCode",{parentName:"p"},"Event Driven Architecture"),". Therefore, ",(0,a.kt)("inlineCode",{parentName:"p"},"EventExtension")," is where you would want to add ",(0,a.kt)("inlineCode",{parentName:"p"},"Event Listeners")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"Dispatch Events")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="robusta/event.dart"',title:'"robusta/event.dart"'},"EventExtension eventExtension() {\n  return EventExtension(\n    configurator: (em, container) {\n      em.addEventListener<ErrorEvent>(onError);\n    },\n  );\n}\n")))}c.isMDXComponent=!0}}]);